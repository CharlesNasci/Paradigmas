{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of Charles do Nascimento Marciano - USJT-2020-LINGPROG-aula01-pratica-python numeros strings.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.4"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/CharlesNasci/Paradigmas/blob/master/Copy_of_Charles_do_Nascimento_Marciano_USJT_2020_LINGPROG_aula01_pratica_python_numeros_strings.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1ScI8-UPYwDa",
        "colab_type": "text"
      },
      "source": [
        "![logo usjt](https://www.usjt.br/app/themes/mobister/dist/images/sao-judas-universidade.png)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JMB0gTlVYwDf",
        "colab_type": "text"
      },
      "source": [
        "# Paradigmas de Linguagens de Programação\n",
        "- **Professor**: Sergio Bonato <antonio.bonato@saojudas.br>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WMBNqkmkYwDi",
        "colab_type": "text"
      },
      "source": [
        "# Atividade01 - Pyton Básico\n",
        "\n",
        "**Conteúdo:**\n",
        "- Introdução ao Python\n",
        "- Anaconda e Jupyter Notebook\n",
        "- Números\n",
        "- Strings \n",
        "- Formatação de Strings"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hEvsYUHwYwDk",
        "colab_type": "text"
      },
      "source": [
        "## Autores\n",
        "- **Aluno:**\n",
        "\n",
        "Obs: as tarefas devem ser individuais."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "P0_E3R8wYwDn",
        "colab_type": "text"
      },
      "source": [
        "## Exercícios"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aBpenXtFYwDp",
        "colab_type": "text"
      },
      "source": [
        "#### 1 Faça um Programa que peça o raio de um círculo, calcule e mostre sua área."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "OnL3xzMhCwoE",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "f0ac9988-49f0-479f-a97d-d456cd0ee381"
      },
      "source": [
        "#solução\n",
        "pi = 3.14                        \n",
        "c  = float (input('Digite a área do Circulo em metros:  '))\n",
        "a =  pi * (c * c)\n",
        "print (\"A area do circulo é \", a )\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Digite a área do Circulo em metros:  5\n",
            "A area do circulo é  78.5\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Nf8JptUsYwDw",
        "colab_type": "text"
      },
      "source": [
        "#### 2 Faça um Programa que peça a temperatura em graus Farenheit, transforme e mostre a temperatura em graus Celsius. C = (5 * (F-32) / 9)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Tbde83rEYwDy",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "48289155-e813-42f8-e663-d7f49183fee1"
      },
      "source": [
        "#solução\n",
        "f = float (input('Digite a temperatura em Farenheit: '))\n",
        "\n",
        "c = (f*(f-32/9))\n",
        "\n",
        "print (\"A temperatura em Celsius é\", c)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Digite a temperatura em Farenheit: 36\n",
            "A temperatura em Celsius é 1168.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PHb8BmcCYwD1",
        "colab_type": "text"
      },
      "source": [
        "#### 3 Faça um Programa que peça 2 números inteiros e um número real. Calcule e mostre:\n",
        "- o produto do dobro do primeiro com metade do segundo .\n",
        "- a soma do triplo do primeiro com o terceiro.\n",
        "- o terceiro elevado ao cubo."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UjrhMCGXYwD2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#solução\n",
        "n1 = int (input('Digite um numero inteiro: '))\n",
        "n2 = int(input('Digite outro numero inteiro: '))\n",
        "n3 = float(input('Digite um numero real: '))\n",
        "\n",
        "a = (n1*n1/n2)\n",
        "b = (n1 * 3 + n3)\n",
        "c = (n3*n3*n3)\n",
        "\n",
        "print('Dobro da metade de', n1, 'com metade de ', n2, 'é igual: ', a)\n",
        "print('A soma do triplo de ', n1, '+',n2,\"=\", c)\n",
        "print(n3, '³','=', c)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BAS5FXQLYwD4",
        "colab_type": "text"
      },
      "source": [
        "#### 4 Faça um programa que permita ao usuário digitar seu nome e em seguida mostre o nome do usuário de trás para frente utilizando somente letras maiúsculas. Observação: não use loops."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lDNusKbMYwD5",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#solução\n",
        "n = input(\"Digite seu nome aqui: \")\n",
        "\n",
        "print(\"O nome digite ao contrario fica: \",n.upper()[::-1])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "t_7QAkStYwD8",
        "colab_type": "text"
      },
      "source": [
        "#### 5 Peça para o usuário digitar uma frase. Escreva esta frase iniciando todas as palavras com letra maiúscula. Não use loops."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Y9326uEBYwD9",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "13a489c7-d89d-472f-d018-83e9cbef7adb"
      },
      "source": [
        "#solução\n",
        "s = input('Digite algo:')\n",
        "\n",
        "x = s.title()\n",
        "\n",
        "print (x)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Digite algo:tudo otimo e com voce?\n",
            "Tudo Otimo E Com Voce?\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6SLACxrAYwD_",
        "colab_type": "text"
      },
      "source": [
        "#### 6 Faça um programa que leia 2 strings e informe o conteúdo delas seguido do seu comprimento. \n",
        "#### Exemplo:\n",
        "`\n",
        "String 1: Brasil Hexa 2018\n",
        "String 2: Brasil! Hexa 2018!\n",
        "Tamanho de \"Brasil Hexa 2018\": 16 caracteres\n",
        "Tamanho de \"Brasil! Hexa 2018!\": 18 caracteres\n",
        "`"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jBqecp4ZYwEA",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#solução\n",
        "s = input('String 1: ')\n",
        "s1 = input('String 2: ')\n",
        "\n",
        "print (s, 'possui ', len(s), 'caracteres')\n",
        "print (s1,'possui', len(s1), 'caracteres')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Y8s425XjYwEC",
        "colab_type": "text"
      },
      "source": [
        "#### 7 Faça um Programa que pergunte quanto você ganha por hora e o número de horas trabalhadas no mês. Calcule e mostre o total do seu salário no referido mês."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M0EpqVQ3YwED",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#solução\n",
        "recebe = float (input('Quanto voce recebe por hora? '))\n",
        "horas = float(input('Qual foi o numero de horas trabalhadas? '))\n",
        "\n",
        "salario = (recebe * horas)\n",
        "\n",
        "print ('Seu salario será de: R$',salario)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3IqxmmHRYwEF",
        "colab_type": "text"
      },
      "source": [
        "#### 8 João Papo-de-Pescador, homem de bem, comprou um microcomputador para controlar o rendimento diário de seu trabalho. Toda vez que ele traz um peso de peixes maior que o estabelecido pelo regulamento de pesca do estado de São Paulo (50 quilos) deve pagar uma multa de R$ 4,00 por quilo excedente. João precisa que você faça um programa que leia a variável peso (peso de peixes) e verifique se há excesso. Se houver, gravar na variável excesso e na variável multa o valor da multa que João deverá pagar. Caso contrário mostrar tais variáveis com o conteúdo ZERO."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AOfZWRUOYwEG",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#solução\n",
        "p = float (input('Qual o peso do Peixe? '))\n",
        "\n",
        "if p > 50:\n",
        "  excesso = p - 50\n",
        "  multa = excesso + 4\n",
        "\n",
        "else:\n",
        "    excesso = 'Zero'\n",
        "    multa = 'Zero'\n",
        "\n",
        "print ('Seu peixe pesou', p, 'a multa cobrada sera de R$',multa)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ATfoQ43KYwEI",
        "colab_type": "text"
      },
      "source": [
        "#### 9 Faça um Programa que calcule a área de um quadrado, em seguida mostre o dobro desta área para o usuário."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "x-2nnFpVYwEI",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#solução\n",
        "quadrado = int(input('Digite a area do quadrado '))\n",
        "\n",
        "x = quadrado * 4\n",
        "d = x * 2\n",
        "\n",
        "print (\"A area do quadrado \", quadrado, '=', x, 'seu dobro é', d)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CTTlXP9dYwEL",
        "colab_type": "text"
      },
      "source": [
        "#### 10 Faça um Programa que peça a temperatura em graus Celsius, transforme e mostre em graus Farenheit."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cdsYKUH5YwEL",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#solução\n",
        "c = float(input('Qual a temperatura em Celsius? '))\n",
        "\n",
        "f = c * (9/5) + 32\n",
        "\n",
        "print (f'A temperatura em Farenheit é', f,'F°')\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tzVLrpjTYwEN",
        "colab_type": "text"
      },
      "source": [
        "#### 11 Faça um Programa que pergunte quanto você ganha por hora e o número de horas trabalhadas no mês. Calcule e mostre o total do seu salário no referido mês, sabendo-se que são descontados 11% para o Imposto de Renda, 8% para o INSS e 5% para o sindicato, faça um programa que nos dê:\n",
        "- salário bruto.\n",
        "- quanto pagou ao INSS.\n",
        "- quanto pagou ao sindicato.\n",
        "- o salário líquido.\n",
        "- calcule os descontos e o salário líquido, conforme a tabela abaixo:\n",
        "<table>\n",
        "<tr><td>+</td><td>Salário Bruto</td><td>R\\$</td><td>0.00</td></tr>\n",
        "<tr><td>-</td><td>IR (27,5%)</td><td>R\\$</td><td>0.00</td></tr>\n",
        "<tr><td>-</td><td>INSS (11%)</td><td>R\\$</td><td>0.00</td></tr>\n",
        "<tr><td>-</td><td>Sindicato ( 5%)</td><td>R\\$</td><td>0.00</td></tr>\n",
        "<tr><td>=</td><td>Salário Liquido</td><td>R\\$</td><td>0.00</td></tr>\n",
        "</table>\n",
        "\n",
        "Obs.: Salário Bruto - Descontos = Salário Líquido.\n",
        "Utilize formatação de strings para o relatório sair alinhadinho."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aCh9-h45YwEO",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "outputId": "3a3f7fb8-b95b-4964-bae2-fec9be1b9888"
      },
      "source": [
        "#solução\n",
        "recebe = float (input('Quanto voce recebe por hora? '))\n",
        "horas = float(input('Qual foi o numero de horas trabalhadas? '))\n",
        "\n",
        "salario = recebe * horas\n",
        "ir = salario * 0.11\n",
        "inss = salario * 0.8\n",
        "sindicato = salario * 0.05\n",
        "\n",
        "print('+ Salario: R$ %.2f'% salario)\n",
        "print('-IR: R$ %.2f '%ir)\n",
        "print('-INSS: R$ %.2f' %inss)\n",
        "print('-sindicato: R$ %.2f' %sindicato)\n",
        "print('= Salario liquido: R$ %.2f' %(salario - ir - inss - sindicato))\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Quanto voce recebe por hora? 10\n",
            "Qual foi o numero de horas trabalhadas? 2\n",
            "+ Salario: R$ 20.00\n",
            "-IR: R$ 2.20 \n",
            "-INSS: R$ 16.00\n",
            "-sindicato: R$ 1.00\n",
            "= Salario liquido: R$ 0.80\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ClmTS9b9YwEP",
        "colab_type": "text"
      },
      "source": [
        "#### 12 Leet é uma forma de se escrever o alfabeto latino usando outros símbolos em lugar das letras, como números por exemplo. A própria palavra leet admite muitas variações, como l33t ou 1337. O uso do leet reflete uma subcultura relacionada ao mundo dos jogos de computador e internet, sendo muito usada para confundir os iniciantes e afirmar-se como parte de um grupo. Pesquise sobre as principais formas de traduzir as letras. Depois, faça um programa que peça uma texto e transforme-o para a grafia leet speak.\n",
        "Desafio: não use loops nem desvios condicionais.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B25PPzjKYwEQ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "5be4381d-ef80-48e9-d986-c1c4edac4b36"
      },
      "source": [
        "leet = input('Digite uma frase aleatória:')\n",
        "\n",
        "leet = leet.replace('a','ä')\n",
        "leet = leet.replace('b','ß')\n",
        "leet = leet.replace('c','¢')\n",
        "leet = leet.replace('d','I>')\n",
        "leet = leet.replace('e','ë')\n",
        "leet = leet.replace('g','6')\n",
        "leet = leet.replace('h','#')\n",
        "leet = leet.replace('i','ï')\n",
        "leet = leet.replace('j','j')\n",
        "leet = leet.replace('l','£')\n",
        "leet = leet.replace('m','^^')\n",
        "leet = leet.replace('n','//')\n",
        "leet = leet.replace('o','ö')\n",
        "leet = leet.replace('p','p')\n",
        "leet = leet.replace('r','Я')\n",
        "leet = leet.replace('s','§')\n",
        "leet = leet.replace('t','7')\n",
        "leet = leet.replace('x','><')\n",
        "\n",
        "print(f'A frase traduzida para leet é: {leet}')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Digite uma frase aleatória:charles\n",
            "A frase traduzida para leet é: ¢#äЯ£ë§\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}
